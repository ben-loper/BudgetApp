// <auto-generated />
using System;
using BudgetBackend.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BudgetBackend.Data.Migrations
{
    [DbContext(typeof(BudgetAppContext))]
    [Migration("20220606015541_FixDatabaseIssues")]
    partial class FixDatabaseIssues
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BudgetBackend.Entities.MonthlyBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("MonthlyIncomeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "MonthlyIncomeId" }, "IX_MonthlyBill_MonthlyIncomeId");

                    b.ToTable("MonthlyBill", (string)null);
                });

            modelBuilder.Entity("BudgetBackend.Entities.MonthlyIncome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<DateTime>("LastPayDay")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyIncome", (string)null);
                });

            modelBuilder.Entity("BudgetBackend.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<int>("BudgetId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "BudgetId" }, "IX_Transaction_BudgetId");

                    b.ToTable("Transaction", (string)null);
                });

            modelBuilder.Entity("BudgetBackend.Entities.WeeklyBudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<int>("MonthlyIncomeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "IX_Budget");

                    b.HasIndex(new[] { "MonthlyIncomeId" }, "IX_WeeklyBudget_MonthlyIncomeId");

                    b.ToTable("WeeklyBudget", (string)null);
                });

            modelBuilder.Entity("BudgetBackend.Entities.MonthlyBill", b =>
                {
                    b.HasOne("BudgetBackend.Entities.MonthlyIncome", "MonthlyIncome")
                        .WithMany("MonthlyBills")
                        .HasForeignKey("MonthlyIncomeId")
                        .IsRequired()
                        .HasConstraintName("FK_MonthlyBill_MonthlyIncome");

                    b.Navigation("MonthlyIncome");
                });

            modelBuilder.Entity("BudgetBackend.Entities.Transaction", b =>
                {
                    b.HasOne("BudgetBackend.Entities.WeeklyBudget", "Budget")
                        .WithMany("Transactions")
                        .HasForeignKey("BudgetId")
                        .IsRequired()
                        .HasConstraintName("FK_Transaction_Budget");

                    b.Navigation("Budget");
                });

            modelBuilder.Entity("BudgetBackend.Entities.WeeklyBudget", b =>
                {
                    b.HasOne("BudgetBackend.Entities.MonthlyIncome", "MonthlyIncome")
                        .WithMany("WeeklyBudgets")
                        .HasForeignKey("MonthlyIncomeId")
                        .IsRequired()
                        .HasConstraintName("FK_Budget_MonthlyIncome");

                    b.Navigation("MonthlyIncome");
                });

            modelBuilder.Entity("BudgetBackend.Entities.MonthlyIncome", b =>
                {
                    b.Navigation("MonthlyBills");

                    b.Navigation("WeeklyBudgets");
                });

            modelBuilder.Entity("BudgetBackend.Entities.WeeklyBudget", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
